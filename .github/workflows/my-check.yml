name: SEOpageAnalyzer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          DB_DATABASE: dblvl4
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup PHP
        # Action gives to setup the PHP environment to test application
        # https://github.com/shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          # Specify the PHP version
          php-version: '7.4'

      - name: PHP Security Checker
        uses: StephaneBour/actions-php-security-checker@1.0

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Check lint
        run: make lint

      - name: Connect to PostgreSQL
        env:
          DB_CONNECTION: pgsql
          DB_PORT: 5432
          DB_DATABASE: postgres
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate --force

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: make test

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID_MY}}
        with:
          coverageCommand: make test-coverage
          coverageLocations: ${{github.workspace}}/coverage-report:clover
